<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real Time Products</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h1>Real Time Product List</h1>

    <!-- Formul치rio para adicionar produto -->
    <form id="productForm">
        <input type="text" id="title" placeholder="Title" required>
        <input type="number" id="price" placeholder="Price" required>
        <button type="submit">Add Product</button>
    </form>

    <!-- Lista de produtos -->
    <ul id="productList">
        {{#each products}} <!-- Usa 'products' que foi passado pela rota -->
            <li>{{this.title}} - ${{this.price}}</li>
        {{/each}}
    </ul>

    <script>
        const socket = io();

        // Enviar dados do produto pelo WebSocket quando o formul치rio for enviado
        document.getElementById('productForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const productData = {
                title: document.getElementById('title').value,
                price: document.getElementById('price').value,
            };

            // Emite o evento 'addProduct' para o servidor com os dados do produto
            socket.emit('addProduct', productData);

            // Limpar os campos do formul치rio ap칩s envio
            document.getElementById('title').value = '';
            document.getElementById('price').value = '';
        });

        // Atualizar lista de produtos em tempo real ao receber 'updateProducts'
        socket.on('updateProducts', (products) => {
            const productList = document.getElementById('productList');
            productList.innerHTML = '';
            products.forEach(product => {
                const li = document.createElement('li');
                li.textContent = `${product.title} - $${product.price}`;
                productList.appendChild(li);
            });
        });
    </script>
</body>
</html>
