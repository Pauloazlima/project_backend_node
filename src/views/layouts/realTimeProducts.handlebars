<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Real-Time Products</title>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <h1>Real-Time Products</h1>

  <!-- Formulário para adicionar um novo produto -->
  <form id="productForm">
    <input type="text" id="title" placeholder="Title" required />
    <input type="number" id="price" placeholder="Price" required />
    <input type="text" id="description" placeholder="Description" required />
    <button type="submit">Add Product</button>
  </form>

  <!-- Lista de produtos -->
  <ul id="productList">
    {{#each products}}
      <li>{{this.title}} - ${{this.price}}: {{this.description}}</li>
    {{/each}}
  </ul>

  <script>
    const socket = io();

    // Função para adicionar o produto via WebSocket
    document.getElementById('productForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const title = document.getElementById('title').value;
      const price = document.getElementById('price').value;
      const description = document.getElementById('description').value;

      socket.emit('addProduct', { title, price, description });

      // Limpar os campos do formulário
      document.getElementById('title').value = '';
      document.getElementById('price').value = '';
      document.getElementById('description').value = '';
    });

    // Atualizar a lista de produtos em tempo real
    socket.on('updateProducts', function(products) {
      const productList = document.getElementById('productList');
      productList.innerHTML = ''; // Limpar a lista existente

      products.forEach(product => {
        const li = document.createElement('li');
        li.textContent = `${product.title} - $${product.price}: ${product.description}`;
        productList.appendChild(li);
      });
    });
  </script>
</body>
</html>
